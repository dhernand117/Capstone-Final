[{"C:\\Users\\diego\\Desktop\\Capstone-Final\\Capstone-Final\\src\\index.js":"1","C:\\Users\\diego\\Desktop\\Capstone-Final\\Capstone-Final\\src\\reportWebVitals.js":"2","C:\\Users\\diego\\Desktop\\Capstone-Final\\Capstone-Final\\src\\App.js":"3","C:\\Users\\diego\\Desktop\\Capstone-Final\\Capstone-Final\\src\\store.js":"4","C:\\Users\\diego\\Desktop\\Capstone-Final\\Capstone-Final\\src\\components\\contacts\\contact.js":"5","C:\\Users\\diego\\Desktop\\Capstone-Final\\Capstone-Final\\src\\components\\navbar.js":"6","C:\\Users\\diego\\Desktop\\Capstone-Final\\Capstone-Final\\src\\components\\contacts\\Addcontact.js":"7","C:\\Users\\diego\\Desktop\\Capstone-Final\\Capstone-Final\\src\\components\\contacts\\Editcontact.js":"8","C:\\Users\\diego\\Desktop\\Capstone-Final\\Capstone-Final\\src\\components\\contacts\\contacts.js":"9","C:\\Users\\diego\\Desktop\\Capstone-Final\\Capstone-Final\\src\\reducers\\index.js":"10","C:\\Users\\diego\\Desktop\\Capstone-Final\\Capstone-Final\\src\\actions\\contactaction.js":"11","C:\\Users\\diego\\Desktop\\Capstone-Final\\Capstone-Final\\src\\reducers\\contactreducer.js":"12","C:\\Users\\diego\\Desktop\\Capstone-Final\\Capstone-Final\\src\\constants\\types.js":"13"},{"size":500,"mtime":1614726146754,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":1479,"mtime":1614799253104,"results":"17","hashOfConfig":"15"},{"size":487,"mtime":1614803120542,"results":"18","hashOfConfig":"15"},{"size":1522,"mtime":1614804344262,"results":"19","hashOfConfig":"15"},{"size":903,"mtime":1614726752709,"results":"20","hashOfConfig":"15"},{"size":3754,"mtime":1614804344262,"results":"21","hashOfConfig":"15"},{"size":4001,"mtime":1614800564505,"results":"22","hashOfConfig":"15"},{"size":1481,"mtime":1614778343057,"results":"23","hashOfConfig":"15"},{"size":265,"mtime":1612884024201,"results":"24","hashOfConfig":"15"},{"size":742,"mtime":1614804344262,"results":"25","hashOfConfig":"15"},{"size":3872,"mtime":1614804344262,"results":"26","hashOfConfig":"15"},{"size":264,"mtime":1614723387183,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6gssze",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\diego\\Desktop\\Capstone-Final\\Capstone-Final\\src\\index.js",[],"C:\\Users\\diego\\Desktop\\Capstone-Final\\Capstone-Final\\src\\reportWebVitals.js",[],["56","57"],"C:\\Users\\diego\\Desktop\\Capstone-Final\\Capstone-Final\\src\\App.js",[],"C:\\Users\\diego\\Desktop\\Capstone-Final\\Capstone-Final\\src\\store.js",[],"C:\\Users\\diego\\Desktop\\Capstone-Final\\Capstone-Final\\src\\components\\contacts\\contact.js",[],"C:\\Users\\diego\\Desktop\\Capstone-Final\\Capstone-Final\\src\\components\\navbar.js",[],"C:\\Users\\diego\\Desktop\\Capstone-Final\\Capstone-Final\\src\\components\\contacts\\Addcontact.js",[],"C:\\Users\\diego\\Desktop\\Capstone-Final\\Capstone-Final\\src\\components\\contacts\\Editcontact.js",["58"],"C:\\Users\\diego\\Desktop\\Capstone-Final\\Capstone-Final\\src\\components\\contacts\\contacts.js",[],"C:\\Users\\diego\\Desktop\\Capstone-Final\\Capstone-Final\\src\\reducers\\index.js",[],"C:\\Users\\diego\\Desktop\\Capstone-Final\\Capstone-Final\\src\\actions\\contactaction.js",[],"C:\\Users\\diego\\Desktop\\Capstone-Final\\Capstone-Final\\src\\reducers\\contactreducer.js",["59","60","61","62","63","64","65"],"import axios from \"axios\";\r\nimport {  CREATE_CONTACT, DELETE_CONTACT, GET_CONTACT,  UPDATE_CONTACT } from \"../constants/types\";\r\n//*Constant that will take the axios requests for the app\r\nconst api = axios.create({baseURL: `http://localhost:8080`});\r\n//*Our initial state will have an array of objects, a property that it is null and an empty array\r\nconst initialState = {\r\n  contacts: [],\r\n  contact: null,\r\n};\r\n\r\n//*Setting the initial state pulling the data from the backend springboot app\r\n  api.get('/users').then(response => {\r\n  for (let i = 0; i < response.data.length; i++) {\r\n    initialState.contacts.push(response.data[i]);\r\n    }})\r\n\r\n//*Creating a reducer that takes the state and action as arguments and returns the newStates with an arrow function and switch\r\n//* We use the switch keyword to do something different depending on the type of actions or \"cases\" and what will return\r\nexport const contactReducer = (state = initialState, action) => {\r\n  //*linking the payload of the action to a set case\r\n  switch (action.type) {\r\n    //*This first case to create our contacts will return an array with our existing contacts + our added input information using the spread operator\r\n    case CREATE_CONTACT:\r\n      let { name, phone, email, website } = action.payload;\r\n    //*Destructturing contact to pass as a second argument on the axios POST call\r\n      const userRecord = {name, phone, email, website,};\r\n\r\n      api\r\n        .post(\"users/addUser\", userRecord)\r\n        .then((res) => console.log(res))\r\n        .catch((error) => console.log(error));\r\n\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n\r\n    case GET_CONTACT:\r\n      //*Creating an array that will return our updated state checking if the contact id is equal to the payload passed\r\n      //*Using the filter method that will return a new array with the updated values form the initial array\r\n      let arr = state.contacts.filter(\r\n        (contact) => contact.id == action.payload\r\n      );\r\n      //*Once the values are checked by the filter method our arr will get updated\r\n      arr = arr.values();\r\n      //*we create a for loop to store the values inside the new arr\r\n      for (let val of arr) {\r\n        arr = val;\r\n      }\r\n      //*Returning the new state giving a new value to contact\r\n      return {\r\n        ...state,\r\n        contact: arr,\r\n      };\r\n    case UPDATE_CONTACT:\r\n      const {contact, id} = action.payload;\r\n      console.log(action.payload);\r\n      api\r\n        .put(`users/${id}`, contact)\r\n        .then((res) => console.log(res))\r\n        .catch((error) => console.log(error));\r\n      console.log(contact);\r\n      return {\r\n        ...state,\r\n        //*This case will map once again the contacts array and will pass a ternary operator to determine the updated state\r\n        contacts: state.contacts.map((oldContact) =>\r\n          //*Our ternary will check if the id is the same as the payload id and return the action else will leave the contact as is\r\n          oldContact.id == id ? contact : oldContact\r\n        ),\r\n      };\r\n    case DELETE_CONTACT:\r\n      //*Creating a constant that will take the payload from the action that is an ID as a value\r\n      const contactId = action.payload;\r\n      console.log(contactId);\r\n      //* Delete by id axioscall\r\n      api\r\n        .delete(`users/${contactId}`)\r\n        .then((res) => console.log(res))\r\n        .catch((error) => console.log(error));\r\n      return {\r\n        ...state,\r\n        //* This case will use the filter method to return a new array with the function that checks if the id from our array is not equal to\r\n        //*our payload id and then will return the new array\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id != action.payload\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","C:\\Users\\diego\\Desktop\\Capstone-Final\\Capstone-Final\\src\\constants\\types.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":32,"column":6,"nodeType":"72","endLine":32,"endColumn":15,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":24,"column":13,"nodeType":"76","messageId":"77","endLine":24,"endColumn":17},{"ruleId":"74","severity":1,"message":"78","line":24,"column":19,"nodeType":"76","messageId":"77","endLine":24,"endColumn":24},{"ruleId":"74","severity":1,"message":"79","line":24,"column":26,"nodeType":"76","messageId":"77","endLine":24,"endColumn":31},{"ruleId":"74","severity":1,"message":"80","line":24,"column":33,"nodeType":"76","messageId":"77","endLine":24,"endColumn":40},{"ruleId":"81","severity":1,"message":"82","line":44,"column":33,"nodeType":"83","messageId":"84","endLine":44,"endColumn":35},{"ruleId":"81","severity":1,"message":"82","line":70,"column":25,"nodeType":"83","messageId":"84","endLine":70,"endColumn":27},{"ruleId":"81","severity":1,"message":"85","line":87,"column":35,"nodeType":"83","messageId":"84","endLine":87,"endColumn":37},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["88"],"no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar","'phone' is assigned a value but never used.","'email' is assigned a value but never used.","'website' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Update the dependencies array to be: [contact, dispatch, id]",{"range":"91","text":"92"},[1682,1691],"[contact, dispatch, id]"]